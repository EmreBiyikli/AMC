% Distributed for academic research purposes only.
% See COPYING.txt for details.
% Author: Emre Biyikli (biyikli.emre@gmail.com)

% AMC GUI
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Includes initialization, components, callbacks, and auxiliary functions 
% sections, in order. Components compose the GUI whereas callbacks are the 
% functions that perform GUI operations. 
function AMC_GUI()
clc, close all, clear all, delete *.asv

% Initialize
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Default inputs
% Tube inputs: rows are tubes, columns are n, m, length, and angle
tube_input = [10 0 30 10; 10 0 150 10; 6 6 270 15; 0 0 0 0];
bond_length = 1.42;             % Bond length
merge_distance = 0.7;           % Merge length
damping_factor = 0.1;           % Damping factor

% Init
position = [];                  % concatenated positions
position1 = [];                 % tube 1 position
position2 = [];                 % tube 2 position
position3 = [];                 % tube 3 position
position4 = [];                 % tube 4 position
atom_num = size(position, 1);   % number of atoms
% whether a tube exist or not. 1 by generation 0 by remove
full = false(4, 1);
my_axis = [];                   % axis for plot

% Components
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% AMC GUI figure
figure_handle = figure();
set(figure_handle, 'name', 'AMC', 'NumberTitle', 'off');
set(figure_handle, 'Position', [100 100 800 400]);
% Init tube input box size and positions
x_size = 0.075;                     % x box size 
y_size = 0.05;                      % y box size
x_spacing = 0.01;                   % x distance between boxes
y_spacing = 0.02;                   % y distance between boxes
x_increment = x_size + x_spacing;   % x distance to increment for the next box
y_increment = y_size + y_spacing;   % y distance to increment for the next box
origin = [0.40 0.80];               % origin of tube inputs table (5x7)
% n
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment... 
                       origin(2) - 0 * y_increment... 
                       x_size y_size],...
          'String', 'n',...
          'BackgroundColor', get(figure_handle, 'color'));
% m
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment...
                       origin(2) - 0 * y_increment...
                       x_size y_size],...
          'String', 'm',...
          'BackgroundColor', get(figure_handle, 'color'));
% Angle
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 3 * x_increment...
                       origin(2) - 0 * y_increment...
                       x_size y_size],...
          'String', 'Angle',...
          'BackgroundColor', get(figure_handle, 'color'));
% Length
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 4 * x_increment...
                       origin(2) - 0 * y_increment x_size y_size],...
          'String', 'Length',...
          'BackgroundColor', get(figure_handle, 'color'));
% Tube 1
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 0 * x_increment...
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', 'Tube 1',...
          'BackgroundColor', get(figure_handle, 'color'));
% Tube 2
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 0 * x_increment... 
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', 'Tube 2',...
          'BackgroundColor', get(figure_handle, 'color'));
% Tube 3
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 0 * x_increment...
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', 'Tube 3',...
          'BackgroundColor', get(figure_handle, 'color'));
% Tube 4
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) + 0 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', 'Tube 4',...
          'BackgroundColor', get(figure_handle, 'color'));
% Tube input 1 1: Tube 1 n
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment...
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', tube_input(1, 1),...
          'Callback', @edit11_callback);
% Tube input 1 2: Tube 1 m
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment... 
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', tube_input(1, 2),...
          'Callback', @edit12_callback);
% Tube input 1 3: Tube 1 angle
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 3 * x_increment... 
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', tube_input(1, 3),...
          'Callback', @edit13_callback);
% Tube input 1 4: Tube 1 length
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 4 * x_increment... 
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', tube_input(1, 4),...
          'Callback', @edit14_callback);
% Tube input 2 1: Tube 2 n
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment... 
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', tube_input(2, 1),...
          'Callback', @edit21_callback);
% Tube input 2 2: Tube 2 m
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment... 
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', tube_input(2, 2),...
          'Callback', @edit22_callback);
% Tube input 2 3: Tube 2 angle
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 3 * x_increment... 
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', tube_input(2, 3),...
          'Callback', @edit23_callback);
% Tube input 2 4: Tube 2 length
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 4 * x_increment... 
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', tube_input(2, 4),...
          'Callback', @edit24_callback);
% Tube input 3 1: Tube 3 n
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment... 
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', tube_input(3, 1),...
          'Callback', @edit31_callback);
% Tube input 3 2: Tube 3 m
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment... 
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', tube_input(3, 2),...
          'Callback', @edit32_callback);
% Tube input 3 3: Tube 3 angle
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 3 * x_increment...
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', tube_input(3, 3)',...
          'Callback', @edit33_callback);
% Tube input 3 4: Tube 3 length
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 4 * x_increment... 
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', tube_input(3, 4),...
          'Callback', @edit34_callback);
% Tube input 4 1: Tube 4 n
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', tube_input(4, 1),...
          'Callback', @edit41_callback);
% Tube input 4 2: Tube 4 m
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', tube_input(4, 2),...
          'Callback', @edit42_callback);
% Tube input 4 3: Tube 4 angle
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 3 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', tube_input(4, 3),...
          'Callback', @edit43_callback);
% Tube input 4 4: Tube 4 length
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + 4 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...                       
          'String', tube_input(4, 4),...
          'Callback', @edit44_callback);
% Generate 1
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 5 * x_increment... 
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', 'Generate',...
          'Callback', @button11_callback);
% Remove 1
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 6 * x_increment... 
                       origin(2) - 1 * y_increment x_size y_size],...
          'String', 'Remove',...
          'Callback', @button12_callback);
% Generate 2
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 5 * x_increment...
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', 'Generate',...
          'Callback', @button21_callback);
% Remove 2
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 6 * x_increment...
                       origin(2) - 2 * y_increment x_size y_size],...
          'String', 'Remove',...
          'Callback', @button22_callback);
% Generate 3
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 5 * x_increment...
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', 'Generate',...
          'Callback', @button31_callback);
% Remove 3
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 6 * x_increment...
                       origin(2) - 3 * y_increment x_size y_size],...
          'String', 'Remove',...
          'Callback', @button32_callback);
% Generate 4
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 5 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', 'Generate',...
          'Callback', @button41_callback);
% Remove 4
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 6 * x_increment... 
                       origin(2) - 4 * y_increment x_size y_size],...
          'String', 'Remove',...
          'Callback', @button42_callback);
% Init input list origin and box sizes
x_size = 0.10;                      % x box size 
y_size = 0.05;                      % y box size
x_spacing = 0.01;                   % x distance between boxes
y_spacing = 0.02;                   % y distance between boxes
x_increment = x_size + x_spacing;   % x distance to increment for the next box
y_increment = y_size + y_spacing;   % y distance to increment for the next box
origin = [0.40 0.40];               % origin of input list
% Bond length
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) origin(2) - 0 * y_increment...
                       x_size y_size],...
          'String', 'Bond Length',...
          'BackgroundColor', get(figure_handle, 'color'));
% Bond length input
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + x_increment origin(2) - 0 * y_increment...
                       x_size y_size],...
          'String', bond_length,...
          'Callback', @editbl_callback);
% Merge length 
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) origin(2) - 1 * y_increment...
                       x_size y_size],...
          'String', 'Merge Length',...
          'BackgroundColor', get(figure_handle, 'color'));
% Merge length input
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + x_increment origin(2) - 1 * y_increment...
                       x_size y_size],...
          'String', merge_distance,...
          'Callback', @editml_callback);
% Damping factor
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [origin(1) origin(2) - 2 * y_increment...
                       x_size y_size],...
          'String', 'Damping factor',...
          'BackgroundColor', get(figure_handle, 'color'));
% Damping factor input
uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [origin(1) + x_increment origin(2) - 2 * y_increment...
                       x_size y_size],...
          'String', damping_factor,...
          'Callback', @editdamp_callback);
        
% Init buttons origin and box sizes
x_size = 0.10;                      % x box size 
y_size = 0.08;                      % y box size
x_spacing = 0.02;                   % y distance between boxes
x_increment = x_size + x_spacing;   % y distance to increment for the next box
origin = [0.64 0.40];               % origin of input list
% Asis
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 0 * x_increment origin(2)...
                       x_size y_size],...
          'String', 'As is',...
          'Callback', @buttonasis_callback);
% Merge
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 1 * x_increment origin(2)...
                       x_size y_size],...
          'String', 'Merge',...
          'Callback', @buttonmerge_callback);
% Run        
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [origin(1) + 2 * x_increment origin(2)...
                       x_size y_size],...
          'String', 'Run',...
          'Callback', @buttonrun_callback);
% Title
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [0.10 0.90 0.8 0.1],...
          'String', 'Atomistic Modeling of Carbon Nanostructres (AMC)',...
          'BackgroundColor', get(figure_handle, 'color'),...
          'Fontsize', 16);
% Footnote        
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [0.30 0.01 0.4 0.04],...
          'String', 'All length units are Angstrom and angles units are degree.',...
          'BackgroundColor', get(figure_handle, 'color'));
% Atom number string
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [0 0.05 2 * x_size y_size],...
          'String', 'Atom Number (<=5000)',...
          'BackgroundColor', get(figure_handle, 'color'));
% Atom number
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [0.18 0.05 x_size y_size],...
          'String', atom_num,...
          'BackgroundColor', get(figure_handle, 'color'));
% Axes
axes('Parent', figure_handle,...
     'Position', [-0.10 0.24 0.65 0.65],...
     'DataAspectRatio', [1 1 1]);
set(figure_handle, 'toolbar', 'figure');
set(figure_handle, 'menubar', 'figure');

% Callbacks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% "Tube inputs" and "input list" bith read the inputs and store them.
% Generate/remove buttons create/delete the corresponding tubes.
% As is saves positions without merge or run.
% Merge cuts overlapping parts of the tubes and then combines them.
% Run performs relaxation. 
% Tube input 1 1: Tube 1 n
function edit11_callback(hObject, ~)
  tube_input(1, 1) = str2double(get(hObject, 'String')); 
end
% Tube input 1 2: Tube 1 m
function edit12_callback(hObject, ~)
  tube_input(1, 2) = str2double(get(hObject, 'String'));
end
% Tube input 1 3: Tube 1 angle
function edit13_callback(hObject, ~)
  tube_input(1, 3) = str2double(get(hObject, 'String'));
end
% Tube input 1 4: Tube 1 length
function edit14_callback(hObject, ~)
  tube_input(1, 4) = str2double(get(hObject, 'String')); 
end
% Tube input 2 1: Tube 2 n
function edit21_callback(hObject, ~)
  tube_input(2, 1) = str2double(get(hObject, 'String')); 
end
% Tube input 2 2: Tube 2 n
function edit22_callback(hObject, ~)
  tube_input(2, 2) = str2double(get(hObject, 'String')); 
end
% Tube input 2 3: Tube 2 angle
function edit23_callback(hObject, ~)
  tube_input(2, 3) = str2double(get(hObject, 'String')); 
end
% Tube input 2 4: Tube 2 length
function edit24_callback(hObject, ~)
  tube_input(2, 4) = str2double(get(hObject, 'String')); 
end
% Tube input 3 1: Tube 3 n
function edit31_callback(hObject, ~)
  tube_input(3, 1) = str2double(get(hObject, 'String')); 
end
% Tube input 3 2: Tube 3 m
function edit32_callback(hObject, ~)
  tube_input(3, 2) = str2double(get(hObject, 'String')); 
end
% Tube input 3 3: Tube 3 angle
function edit33_callback(hObject, ~)
  tube_input(3, 3) = str2double(get(hObject, 'String')); 
end
% Tube input 3 4: Tube 3 length
function edit34_callback(hObject, ~)
  tube_input(3, 4) = str2double(get(hObject, 'String'));
end
% Tube input 4 1: Tube 4 n
function edit41_callback(hObject, ~)
  tube_input(4, 1) = str2double(get(hObject, 'String'));
end
% Tube input 4 2: Tube 4 m
function edit42_callback(hObject, ~)
  tube_input(4, 2) = str2double(get(hObject, 'String'));
end
% Tube input 4 3: Tube 4 angle
function edit43_callback(hObject, ~)
  tube_input(4, 3) = str2double(get(hObject, 'String')); 
end
% Tube input 4 4: Tube 4 length
function edit44_callback(hObject, ~)
  tube_input(4, 4) = str2double(get(hObject, 'String')); 
end
% Bond length
function editbl_callback(hObject, ~)
  bond_length = str2double(get(hObject, 'String'));
end
%  Merge length
function editml_callback(hObject, ~)
  merge_distance = str2double(get(hObject, 'String'));
end
% Damping factor
function editdamp_callback(hObject, ~)
  damping_factor = str2double(get(hObject, 'String')); 
end
% Generate 1
function button11_callback(~, ~)
  position1 = GenerateTube(tube_input(1, 3),...
                           bond_length,...
                           tube_input(1, 4),...
                           tube_input(1, 2),...
                           tube_input(1, 1));
  full(1) = true; 
  PlotTube(0); 
end
% Generate 2
function button21_callback(~, ~)
  position2 = GenerateTube(tube_input(2, 3),...
                           bond_length,...
                           tube_input(2, 4),...
                           tube_input(2, 2),...
                           tube_input(2, 1)); 
  full(2) = true; 
  PlotTube(0);
end
% Generate 3
function button31_callback(~, ~)
  position3 = GenerateTube(tube_input(3, 3),...
                           bond_length,...
                           tube_input(3, 4),...
                           tube_input(3, 2),...
                           tube_input(3, 1)); 
  full(3) = true; 
  PlotTube(0); 
end
% Generate 4
function button41_callback(~, ~)
  position4 = GenerateTube(tube_input(4, 3),...
                           bond_length,...
                           tube_input(4, 4),...
                           tube_input(4, 2),...
                           tube_input(4, 1));
  full(4) = true; 
  PlotTube(0); 
end
% Remove 1
function button12_callback(~, ~)
  position1 = []; 
  full(1) = false;
  PlotTube(0);
end
% Remove 2
function button22_callback(~, ~)
  position2 = []; 
  full(2) = false;
  plot_tube(0); 
end
% Remove 3
function button32_callback(~, ~)
  position3 = []; 
  full(3) = false; 
  PlotTube(0);
end
% Remove 4
function button42_callback(~, ~)
  position4 = []; 
  full(4) = false; 
  PlotTube(0); 
end
% As is
function buttonasis_callback(~, ~)
  position = [position1; position2; position3; position4];
  dlmwrite('../output/asis_position.txt', position,...
           'delimiter', '\t', 'precision', '%16.8f');
end
% Merge
function buttonmerge_callback(~, ~)
  if (full(1))
    cut_angle = FindCutAngle(1);
    position1 = Cut(cut_angle, position1, tube_input(1, 3)); 
  end  
  if (full(2))
    cut_angle = FindCutAngle(2);
    position2 = Cut(cut_angle, position2, tube_input(2, 3)); 
  end
  if (full(3))
    cut_angle = FindCutAngle(3);
    position3 = Cut(cut_angle, position3, tube_input(3, 3)); 
  end
  if (full(4))
    cut_angle = FindCutAngle(4);
    position4 = Cut(cut_angle, position4, tube_input(4, 3)); 
  end
  position = [position1; position2; position3; position4]; 
  position = Merge(merge_distance, position); 
  PlotTube(1);
end
% Run
function buttonrun_callback(~, ~)
  if (size(position, 1) > 5000)
    fprintf('Atom number limit (5000) is exceeded, quitting!\n\n');    
    return;
  end    
  if (isempty(position))
    position = [position1; position2; position3; position4]; 
  end
  Run(damping_factor, bond_length, figure_handle, my_axis, position);
end

% Auxiliary functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Find Cut Angle
% Finds cut angles such that they are in the middle of existing tubes. 
function cut_angle = FindCutAngle(tube_id)
  pos_angle_distance = tube_input(full, 3)-tube_input(tube_id, 3);
  pos_angle_distance(pos_angle_distance <= 0) = ...
      pos_angle_distance(pos_angle_distance <= 0) + 360;
  [~, pos] = min(pos_angle_distance);
  neg_angle_distance = tube_input(tube_id, 3)-tube_input(full, 3);
  neg_angle_distance(neg_angle_distance <= 0) = ...
      neg_angle_distance(neg_angle_distance <= 0) + 360;
  [~, neg] = min(neg_angle_distance);
  angle_pos = tube_input(tube_id, 3) + pos_angle_distance(pos)/2;
  angle_neg = tube_input(tube_id, 3) - neg_angle_distance(neg)/2;
  cut_angle = [angle_neg angle_pos];
end
% Plot Tube
% Plots either individually by Position# or altogether by Position.
function PlotTube(flag)
  if (flag == 0)
    atom_num = 0;
    if (full(1)) 
      plot3(position1(:, 1), position1(:, 2), position1(:, 3), 'k.'), hold on; 
      atom_num = atom_num + size(position1, 1);
    end
    if (full(2))
      plot3(position2(:, 1), position2(:, 2), position2(:, 3), 'k.'), hold on; 
      atom_num = atom_num + size(position2, 1);
    end   
    if (full(3))
      plot3(position3(:, 1), position3(:, 2), position3(:, 3), 'k.'), hold on; 
      atom_num = atom_num + size(position3, 1);
    end
    if (full(4))
      plot3(position4(:, 1), position4(:, 2), position4(:, 3), 'k.'), hold on; 
      atom_num = atom_num + size(position4, 1);
    end
    if (any(full) == 0); cla; end;
  elseif (flag == 1)
    plot3(position(:, 1), position(:, 2), position(:, 3), 'k.');  
  atom_num = size(position, 1);
  end
  xlabel('x'), ylabel('y'), zlabel('z'); 
  axl = max(15, max(tube_input(:, 4)));
  axis equal, my_axis = [-axl axl -axl axl -axl axl]; axis(my_axis); 
  set(gca, 'XDir', 'Reverse'); view([0 1 0]), hold off;
  % Atom number component
  uicontrol('Style', 'text',...
            'Units', 'normalized',...
            'Position', [0.18 0.05 x_size y_size],...
            'String', atom_num,...
            'BackgroundColor', get(figure_handle, 'color'));
end
end